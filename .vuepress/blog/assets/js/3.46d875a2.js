(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{163:function(t,v,_){t.exports=_.p+"assets/img/06.fea5147f.png"},221:function(t,v,_){t.exports=_.p+"assets/img/05.4cae50f5.png"},222:function(t,v,_){t.exports=_.p+"assets/img/07.55a42c45.png"},223:function(t,v,_){t.exports=_.p+"assets/img/08.dfa68c22.png"},224:function(t,v,_){t.exports=_.p+"assets/img/09.1f5e5530.png"},225:function(t,v,_){t.exports=_.p+"assets/img/10.c11e758e.png"},262:function(t,v,_){"use strict";_.r(v);var s=_(28),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,s=t._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"从输入url到页面展示，中间发生了什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到页面展示，中间发生了什么？"}},[t._v("#")]),t._v(" 从输入URL到页面展示，中间发生了什么？")]),t._v(" "),s("p",[s("img",{attrs:{src:_(221),alt:"大致流程"}})]),t._v(" "),s("p",[t._v("大致为一下几个步骤：")]),t._v(" "),s("h2",{attrs:{id:"用户输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户输入"}},[t._v("#")]),t._v(" 用户输入")]),t._v(" "),s("ul",[s("li",[t._v("如果输入的是搜索内容，地址栏会使用浏览器默认的搜索引擎来合成带搜索的URL")]),t._v(" "),s("li",[t._v("如果输入的内容符合URL规则，地址栏会根据规则以及相应的协议，合成完整的URL")])]),t._v(" "),s("h2",{attrs:{id:"url请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url请求"}},[t._v("#")]),t._v(" URL请求")]),t._v(" "),s("ul",[s("li",[t._v("浏览器进程会通过进程间通信(IPC)将URL请求发送至网络进程，网络进程接收到URL请求后会发起真正的URL请求")]),t._v(" "),s("li",[t._v("首先网络进程会先查找浏览器本地是否存在相关的缓存数据，如果存在，直接返回资源给浏览器进程。")]),t._v(" "),s("li",[t._v("不存在相关缓存，进入网络请求环节。第一步就是先进行DNS解析，从DNS获取对应的服务器IP地址，如果请求是HTTPS协议的，还需要建立TLS链接。")]),t._v(" "),s("li",[t._v("当浏览器与服务端建立了TCP连接后，浏览器端会构建请求行、请求头等信息，并把和该域名相关的 Cookie 等数据附加到请求头中，然后向服务器发送构建的请求信息。")]),t._v(" "),s("li",[t._v("服务端接收到请求信息，根据请求信息生成响应的数据并返回。当网络进程接收到响应数据后，就开始解析响应头的信息。")]),t._v(" "),s("li",[t._v("解析响应头\n"),s("ul",[s("li",[s("p",[t._v("重定向\n当网络进程接收到响应数据并开始解析响应头信息时，发现返回的状态码是301或者302时，说明服务器需要浏览器重定向到其他的URL中，此时浏览器就会重定向到响应头中Location字段的地址，然后重新发起URL请求。\n如在控制台输入:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("curl -I http://www.bilibili.com/\n")])])]),s("p",[t._v("就能看到返回的响应头信息\n"),s("img",{attrs:{src:_(163),alt:"重定向"}})]),t._v(" "),s("p",[t._v("HTTP/1.1 ==301== 这里的301就是HTTP的状态码，当状态码为"),s("strong",[t._v("200")]),t._v("时，表示浏览器可以继续处理该请求。")])]),t._v(" "),s("li",[s("p",[t._v("响应类型的处理\n因为响应的数据可能不是HTML模板而是一个安装包时，我们怎么对这些数据进行区分呢？其实就是Content-Type字段。"),s("strong",[t._v("Content-Type 是 HTTP 头中一个非常重要的字段")]),t._v("， 它告诉浏览器服务器返回的响应体数据是什么类型，然后浏览器会根据 Content-Type 的值来决定如何显示响应体的内容\n比如：\n"),s("img",{attrs:{src:_(163),alt:"重定向"}}),t._v("\n在这个图中 Content-Tye: ==text/html== ，就表示返回的数据类型为HTML格式，如果显示的是==application/octet-stream==即流文件，则会进行下载，而不是想HTML格式一样由浏览器进行渲染。")])])])])]),t._v(" "),s("h2",{attrs:{id:"准备渲染进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备渲染进程"}},[t._v("#")]),t._v(" 准备渲染进程")]),t._v(" "),s("p",[t._v("默认情况下，浏览器会给每一个页面分配一个渲染进程，就是说没打开一个新的页面浏览器就会分配一个新的渲染进程和相关的资源。但是如果当打开的页面根域名相同时，浏览器会将相同根域名的页面交给同一个渲染进程进行渲染。\n如下图：\n"),s("img",{attrs:{src:_(222),alt:"准备渲染"}}),t._v("\n这里我打开了两个"),s("a",{attrs:{href:"https://juejin.im/timeline",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金"),s("OutboundLink")],1),t._v("的页面,但浏览器只分配了一个ID为3880的进程处理。\n所以当打开的页面，与之前的页面为同一根域名，且使用相同协议(即同源)的，浏览器会使用同一个进程处理这些页面。")]),t._v(" "),s("h2",{attrs:{id:"提交文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交文档"}},[t._v("#")]),t._v(" 提交文档")]),t._v(" "),s("p",[t._v("所谓提交文档，就是指浏览器进程将网络进程接收到的 HTML 数据提交给渲染进程，具体流程是这样的：")]),t._v(" "),s("ul",[s("li",[t._v("首先当浏览器进程接收到网络进程的响应头数据之后，便向渲染进程发起“提交文档”的消息；\n+渲染进程接收到“提交文档”的消息后，会和网络进程建立传输数据的“管道”；")]),t._v(" "),s("li",[t._v("等文档数据传输完成之后，渲染进程会返回“确认提交”的消息给浏览器进程；")]),t._v(" "),s("li",[t._v("浏览器进程在收到“确认提交”的消息后，会更新浏览器界面状态，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新 Web 页面。")])]),t._v(" "),s("p",[t._v("即当浏览器的前进后退标准、URL地址栏、页面安全状态等(即导航流程)完成后，就到渲染阶段了。（其实就是打开一个新页面时，前一个页面还在的那段时间）")]),t._v(" "),s("h2",{attrs:{id:"渲染阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染阶段"}},[t._v("#")]),t._v(" 渲染阶段")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("首先渲染引擎会先将HTML代码解析成浏览器可以理解的"),s("strong",[t._v("DOM树")]),t._v("(类似JS中的doucument对象)")])]),t._v(" "),s("li",[s("p",[t._v("生成DOM树后，根据CSS样式表，生成与DOM树对应的所有节点的样式(类似JS中document."),s("strong",[t._v("styleSheets")]),t._v("对象)")])]),t._v(" "),s("li",[s("p",[t._v("根据DOM数与样式树生成"),s("strong",[t._v("布局树")])])]),t._v(" "),s("li",[s("p",[t._v("布局计算，根据布局树计算每个节点在浏览器页面中"),s("strong",[t._v("相应的位置/坐标")])])]),t._v(" "),s("li",[s("p",[t._v("对布局树进行"),s("strong",[t._v("分层")]),t._v("，并生成"),s("strong",[t._v("分层树")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("为每个图层生成"),s("strong",[t._v("绘制列表")]),t._v("，并将其提交到合成线程。")])]),t._v(" "),s("li",[s("p",[t._v("合成线程将图层分成"),s("strong",[t._v("图块")]),t._v("，并在"),s("strong",[t._v("光栅化线程池")]),t._v("中将图块转换成位图。")])]),t._v(" "),s("li",[s("p",[t._v("合成线程发送绘制图块命令 "),s("strong",[t._v("DrawQuad")]),t._v(" 给浏览器进程。")])]),t._v(" "),s("li",[s("p",[t._v("浏览器进程根据 DrawQuad 消息"),s("strong",[t._v("生成页面")]),t._v("，并"),s("strong",[t._v("显示")]),t._v("到显示器上。")])])]),t._v(" "),s("h2",{attrs:{id:"相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[t._v("#")]),t._v(" 相关概念")]),t._v(" "),s("ul",[s("li",[t._v("“重排”\n"),s("img",{attrs:{src:_(223),alt:"重排"}}),t._v("\n例如改变元素的宽度、高度等，那么浏览器会触发重新布局，解析之后的一系列子阶段，这个过程就叫重排。无疑，"),s("strong",[t._v("重排需要更新完整的渲染流水线，所以开销也是最大的")]),t._v("。")]),t._v(" "),s("li",[t._v("“重绘”\n"),s("img",{attrs:{src:_(224),alt:"重绘"}}),t._v("\n比如通过 JavaScript 更改某些元素的背景颜色，因为并没有引起几何位置的变换，所以就直接进入了绘制阶段，然后执行之后的一系列子阶段，这个过程就叫重绘。相较于重排操作，"),s("strong",[t._v("重绘省去了布局和分层阶段，所以执行效率会比重排操作要高一些")]),t._v("。")]),t._v(" "),s("li",[t._v("“合成”\n"),s("img",{attrs:{src:_(225),alt:"合成"}}),t._v("\n我们使用了 CSS 的 transform 来实现动画效果，这可以避开重排和重绘阶段，直接在非主线程上执行合成动画操作。这样的效率是最高的，因为是在非主线程上合成，并没有占用主线程的资源，另外也避开了布局和绘制两个子阶段，所以"),s("strong",[t._v("相对于重绘和重排，合成能大大提升绘制效率")]),t._v("。")])]),t._v(" "),s("p",[t._v("怎么防止多余的重排、重绘呢？")]),t._v(" "),s("ul",[s("li",[t._v("使用class来操作样式，批量修改样式，避免频繁的操作style")]),t._v(" "),s("li",[t._v('避免使用table布局，因为table布局对渲染引擎不友好，且容易造成整个布局的"重排"')]),t._v(" "),s("li",[t._v("批量操作dom,比如使用文档碎片createDocumentFragment,或者类似vue和react等有虚拟节点VNode的框架")]),t._v(" "),s("li",[t._v("对动画进行“节流”的操作")]),t._v(" "),s("li",[t._v("对dom的读写要分离")]),t._v(" "),s("li",[t._v("用transform位移来代替操作left/right/top/bottom")])])])}),[],!1,null,null,null);v.default=a.exports}}]);