(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{261:function(t,n,a){"use strict";a.r(n);var e=a(28),s=Object(e.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"call、apply、bind的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call、apply、bind的实现"}},[t._v("#")]),t._v(" call、apply、bind的实现")]),t._v(" "),a("h2",{attrs:{id:"call"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call"}},[t._v("#")]),t._v(" call")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Function.prototype.myCall = function(context, ...args) {\n    const _context = context || window\n    _context.fn = this // this 指向的就是需要改变this执行的方法\n    var res = context.fn(...args)\n    delete _context.fn\n    return res\n}\n")])])]),a("h2",{attrs:{id:"apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apply"}},[t._v("#")]),t._v(" apply")]),t._v(" "),a("p",[t._v("apply 与 call 实现基本相同，只是apply第二个参数接收的是数组")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Function.prototype.myApply = function(context, args) {\n    var _context = context || window\n    _context.fn = this\n    var res = context.fn(...args)\n    delete _context.fn\n    return res\n}\n")])])]),a("h2",{attrs:{id:"bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bind"}},[t._v("#")]),t._v(" bind")]),t._v(" "),a("p",[t._v("bind 与 call 和 apply 功能有一点不同，就是 call 和 apply 返回的是将函数的 this 指向目标对象后"),a("strong",[t._v("函数执行的结果")]),t._v("，\n而 bind 方法返回的是将函数的 this 指向目标对象后的"),a("strong",[t._v("函数")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Function.prototype.myBind = function(context, ...args) {\n    const fn = this\n    const bindFn = function(...newArgs) {\n        return fn.call(\n            this instanceof bindFn ? this : context,\n            ...args, ...newArgs\n        )\n    }\n    bindFn.prototype = Object.create(fn.prototype)\n    return bindFn\n}\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);