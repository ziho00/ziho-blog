(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{259:function(t,n,e){"use strict";e.r(n);var l=e(28),r=Object(l.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"js-数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-数据类型"}},[t._v("#")]),t._v(" JS 数据类型")]),t._v(" "),e("p",[t._v("在JS中数据类型一般被分为两种，"),e("strong",[t._v("值类型")]),t._v("与"),e("strong",[t._v("引用类型")])]),t._v(" "),e("p",[t._v("因为值类型在赋值时是直接将该值拷一份贝再将拷贝的值赋值给新变量，而引用类型的赋值则是拷贝引用的地址再将地址赋值给新变量引用。")]),t._v(" "),e("h2",{attrs:{id:"值类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#值类型"}},[t._v("#")]),t._v(" 值类型")]),t._v(" "),e("ul",[e("li",[t._v("Boolean\n只有 true 和 false 两个值")]),t._v(" "),e("li",[t._v("Null\ntypeof null 返回的是对象'object'字符串，说明他其实是一个引用类型，但是null指向的对象永远是一个表示为0的地址 (即所有的null都指向一个表示为0的地址)")]),t._v(" "),e("li",[t._v("Undefined\n一个没有赋值的变量默认值为undefined，变量提升时的默认值也是 undefined")]),t._v(" "),e("li",[t._v("Number\n根据ESMAScript JS 中有且仅由一种数字类型 是基于 IEEE754 标准的双精度64位二进制数")]),t._v(" "),e("li",[t._v("BigInt\nJS 新数据类型，可以用任意精度表示数字。使用BigInt可以存储超过Number安全长度的整型数字")]),t._v(" "),e("li",[t._v("String\n字符串类型")]),t._v(" "),e("li",[t._v("Symbol\n表示唯一值，通常用来作为对象(Object) 的 key")])]),t._v(" "),e("h2",{attrs:{id:"引用类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用类型"}},[t._v("#")]),t._v(" 引用类型")]),t._v(" "),e("ul",[e("li",[t._v("Object\nJS，中对象看做一组属性的集合")])])])}),[],!1,null,null,null);n.default=r.exports}}]);